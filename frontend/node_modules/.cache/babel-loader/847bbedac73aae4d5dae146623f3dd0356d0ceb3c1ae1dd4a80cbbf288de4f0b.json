{"ast":null,"code":"var _jsxFileName = \"/Users/vineel/Desktop/NueroPass/frontend/src/Components/Textverify/Textverify.js\",\n  _s = $RefreshSig$();\n// write a function that return \"textverify\" message \nimport React, { useState, useEffect } from 'react';\nimport './Textverify.css';\nimport { useNavigate } from 'react-router-dom';\nimport { securityQuestions } from '../../assets/securityQuestions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Textverify() {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [verificationStatus, setVerificationStatus] = useState(null);\n  useEffect(() => {\n    // Randomly select a question when component mounts\n    const randomIndex = Math.floor(Math.random() * securityQuestions.length);\n    setCurrentQuestion(securityQuestions[randomIndex]);\n  }, []);\n  const handleAnswerSelect = option => {\n    setSelectedAnswer(option);\n  };\n  const handleVerify = () => {\n    if (!selectedAnswer) {\n      alert('Please select an answer');\n      return;\n    }\n    if (currentQuestion.answer === selectedAnswer) {\n      setVerificationStatus('success');\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 100000);\n    } else {\n      setVerificationStatus('failed');\n    }\n  };\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textverify-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textverify-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Security Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedAnswer === option ? 'selected' : ''}`,\n          onClick: () => handleAnswerSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"verify-button\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), verificationStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message ${verificationStatus}`,\n      children: verificationStatus === 'success' ? 'Fund transfer successful! Redirecting...' : 'Verification failed. Please try again.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Textverify, \"5GUw5w+6flrl7h9DUurENsjnXTY=\", false, function () {\n  return [useNavigate];\n});\n_c = Textverify;\nexport default Textverify;\nvar _c;\n$RefreshReg$(_c, \"Textverify\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","securityQuestions","jsxDEV","_jsxDEV","Textverify","_s","navigate","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","verificationStatus","setVerificationStatus","randomIndex","Math","floor","random","length","handleAnswerSelect","option","handleVerify","alert","answer","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/vineel/Desktop/NueroPass/frontend/src/Components/Textverify/Textverify.js"],"sourcesContent":["// write a function that return \"textverify\" message \nimport React, { useState, useEffect } from 'react';\nimport './Textverify.css';\nimport { useNavigate } from 'react-router-dom';\nimport { securityQuestions } from '../../assets/securityQuestions.js';\n\nfunction Textverify() {\n    const navigate = useNavigate();\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [selectedAnswer, setSelectedAnswer] = useState('');\n    const [verificationStatus, setVerificationStatus] = useState(null);\n    \n    useEffect(() => {\n        // Randomly select a question when component mounts\n        const randomIndex = Math.floor(Math.random() * securityQuestions.length);\n        setCurrentQuestion(securityQuestions[randomIndex]);\n    }, []);\n\n    const handleAnswerSelect = (option) => {\n        setSelectedAnswer(option);\n    };\n    \n    const handleVerify = () => {\n        if (!selectedAnswer) {\n            alert('Please select an answer');\n            return;\n        }\n\n        if (currentQuestion.answer === selectedAnswer) {\n            setVerificationStatus('success');\n            setTimeout(() => {\n                navigate('/dashboard');\n            }, 100000);\n        } else {\n            setVerificationStatus('failed');\n        }\n    };\n    \n    if (!currentQuestion) {\n        return <div className=\"textverify-container\">Loading...</div>;\n    }\n\n    return (\n        <div className=\"textverify-container\">\n            <h2>Security Verification</h2>\n            <div className=\"question-section\">\n                <h3>{currentQuestion.question}</h3>\n                <div className=\"options-container\">\n                    {currentQuestion.options.map((option, index) => (\n                        <button\n                            key={index}\n                            className={`option-button ${selectedAnswer === option ? 'selected' : ''}`}\n                            onClick={() => handleAnswerSelect(option)}\n                        >\n                            {option}\n                        </button>\n                    ))}\n                </div>\n            </div>\n            <button className=\"verify-button\" onClick={handleVerify}>\n                Verify\n            </button>\n            {verificationStatus && (\n                <div className={`status-message ${verificationStatus}`}>\n                    {verificationStatus === 'success' \n                        ? 'Fund transfer successful! Redirecting...' \n                        : 'Verification failed. Please try again.'}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Textverify;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}